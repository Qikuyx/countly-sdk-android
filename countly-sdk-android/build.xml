<project default="package" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <!-- Project properties -->
    <property name="version.num" value="13.10" />
    <property name="project" value="countly-sdk-android" />

    <!-- Standard jar stuff -->
    <property name="jarfile" value="${project}-${version.num}.jar" />
    <!--
    Change the sdk path. Because I am lazy, I just change the path.
    It should be moved to a property file externally.
    wangqi 2014-05-20 
     -->
    <property name="sdk.dir" value="/Users/wangqi/tools/android-sdk-mac_86/" />
    <!-- <property name="lib.dir" value="libs" /> -->
    <property name="src.dir" value="src"/>
    <property name="build.dir" value="target"/>
    <property name="dist.dir" location="target" />
    <property name="classes.dir"  value="${build.dir}/classes"/>
    <buildnumber file="build.num" />

    <!-- Maven stuff -->
    <property name="groupId" value="ly.count" />
    <property name="artifactId" value="sdk-android" />
    <property name="version" value="13.10-SNAPSHOT" />

    <!-- defined maven snapshots and staging repository id and url -->
    <property name="ossrh-snapshots-repository-url"
        value="https://oss.sonatype.org/content/repositories/snapshots/" />
    <property name="ossrh-staging-repository-url"
        value="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
    <!-- there server id in the Maven settings.xml -->
    <property name="ossrh-server-id" value="sonatype-nexus-snapshots" />

    <!-- define artifacts' name, which follows the convention of Maven -->
    <property name="jar" value="${dist.dir}/${artifactId}-${version}.jar" />
    <property name="javadoc-jar" value="${dist.dir}/${artifactId}-${version}-javadoc.jar" />
    <property name="sources-jar" value="${dist.dir}/${artifactId}-${version}-sources.jar" />

    <!-- Set up classpath -->
    <path id="classpath">
        <!-- <fileset dir="${lib.dir}" includes="**/*.jar" /> -->
        <fileset dir="${sdk.dir}" includes="**/*.jar" />
    </path>

    <!-- Compile java files into classes -->
    <target name="compile">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" />
    </target>

    <!-- Package a jar from compiled class files -->
    <target name="jar" depends="compile">
        <delete file="${jar}" />
        <delete file="MANIFEST.MF" />
        <manifest file="MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}" />
            <attribute name="Implementation-Version" value="${version.num}-b${build.number}"/> 
        </manifest>

        <jar destfile="${jar}" basedir="${build.dir}/classes" includes="**/*.class" manifest="MANIFEST.MF" />
    </target>

    <target name="dist" depends="jar">
        <mkdir dir="${dist.dir}" />
        <!-- build the javadoc jar -->
        <javadoc sourcepath="${src.dir}" destdir="${dist.dir}/javadoc" />
        <jar jarfile="${javadoc-jar}">
            <fileset dir="${dist.dir}/javadoc" />
        </jar>
        <delete dir="${dist.dir}/javadoc" />

        <!-- build the sources jar -->
        <jar jarfile="${sources-jar}">
            <fileset dir="${src.dir}" />
        </jar>
    </target>

    <!-- Clean out the build files -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete>
            <fileset dir="." includes="${jar}"/>
            <fileset file="MANIFEST.MF"/>
        </delete>
    </target>

    <!-- Compile and package a jar -->
    <target name="package" depends="compile,jar" />

    <target name="deploy" depends="dist" description="deploy snapshot version to Maven snapshot repository">
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
            <arg value="-Durl=${ossrh-snapshots-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${jar}" />
            <arg value="-e" />
        </artifact:mvn>
    </target>

    <!-- before this, update project version (both build.xml and pom.xml) from SNAPSHOT to RELEASE -->
    <target name="stage" depends="dist" description="deploy release version to Maven staging repository">
        <!-- sign and deploy the main artifact -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${jar}" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <!-- sign and deploy the sources artifact -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${sources-jar}" />
            <arg value="-Dclassifier=sources" />
            <arg value="-Pgpg" />
        </artifact:mvn>

        <!-- sign and deploy the javadoc artifact -->
        <artifact:mvn>
            <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
            <arg value="-Durl=${ossrh-staging-repository-url}" />
            <arg value="-DrepositoryId=${ossrh-server-id}" />
            <arg value="-DpomFile=pom.xml" />
            <arg value="-Dfile=${javadoc-jar}" />
            <arg value="-Dclassifier=javadoc" />
            <arg value="-Pgpg" />
        </artifact:mvn>
    </target>

</project>